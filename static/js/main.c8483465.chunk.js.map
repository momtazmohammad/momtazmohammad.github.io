{"version":3,"sources":["getWeb3.js","components/NewEnquery.js","components/NewBid.js","components/EnqueryList.js","App.js","reportWebVitals.js","reducers/rootReducer.js","index.js"],"names":["getWeb3","Promise","resolve","reject","window","addEventListener","a","ethereum","web3","Web3","enable","console","log","provider","providers","HttpProvider","Alert","props","elevation","variant","useStyles","makeStyles","theme","root","margin","spacing","width","wrapper","position","buttonProgress","top","left","marginTop","marginLeft","dialogPaper","minHeight","maxHeight","textfld","connect","state","enqueries","contract","account","dispatch","addEnq","enq","type","payload","useState","enqno","duration","partNo","partName","uom","qty","buyerName","locationAddress","buyerDeposit","sellerRcvDeposit","sellerPaidDeposit","enquery","setEnquery","errors","setErrors","React","loading","setLoading","open","severity","msg","openSnack","setOpenSnack","classes","onSubmit","fld","vld","methods","createEnquery","String","send","from","value","result","enqid","events","EnqueryCreated","returnValues","id","enqEndTime","Date","now","status","buyerAdd","close","setEnqueryState","target","name","Snackbar","autoHideDuration","onClose","Dialog","handleClose","maxWidth","paper","aria-labelledby","DialogTitle","DialogContent","TextField","error","helperText","className","required","onChange","label","DialogActions","Button","onClick","color","disabled","CircularProgress","size","updateEnq","enqs","amount","supName","bid","setBid","bidder","placeBid","map","item","setBidState","fullWidth","table","minWidth","flexGrow","menuButton","marginRight","title","appBar","backgroundColor","button","statusEnum","0","1","2","3","4","null","sendtxn","setSendtxn","openNewEnquery","setOpenNewEnquery","openPlaceBid","setOpenPlaceBid","myEnqueries","myBids","openEnqs","filterState","setfilterState","filterEnqs","filter","handleFilterChange","event","checked","callback","delay","savedCallback","useRef","useEffect","current","setInterval","clearInterval","useInterval","onEnd","endEnquery","onCancle","cancleEnquery","onRecieved","receivedItem","onSettlement","settlement","statusAv","s","LinearProgress","AppBar","Toolbar","IconButton","edge","aria-label","Typography","FormControlLabel","control","Switch","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","colSpan","TableBody","row","scope","toLocaleDateString","toLocaleTimeString","Chip","avatar","Avatar","onPlaceBid","NewEnquery","NewBid","App","componentDidMount","setWeb3","eth","getAccounts","accounts","setAccount","net","getId","networkId","deployedNetwork","PurchaseContract","networks","instance","Contract","abi","address","setContract","getEnqueryCount","call","enqCnt","enqList","i","getEnquery","getBid","push","setEnqs","alert","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initstate","rootReducer","action","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8483465.chunk.js","sourcesContent":["import Web3 from \"web3\";\r\n\r\nconst getWeb3 = () =>\r\n  new Promise((resolve, reject) => {\r\n    // Wait for loading completion to avoid race conditions with web3 injection timing.\r\n    window.addEventListener(\"load\", async () => {\r\n      // Modern dapp browsers...\r\n      if (window.ethereum) {\r\n        const web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n          await window.ethereum.enable();\r\n          // Acccounts now exposed\r\n          resolve(web3);\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n        const web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n        resolve(web3);\r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          //\"http://127.0.0.1:7545\"\r\n          \"https://ropsten.infura.io/v3/a143b861a8744567946ec8cb0a87c9df\"\r\n        );\r\n        const web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n        resolve(web3);\r\n      }\r\n    });\r\n  });\r\n\r\nexport default getWeb3;\r\n","import React, { useState } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25%\",\r\n    },\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n  },\r\n  buttonProgress: {\r\n    //color: green[500],\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  dialogPaper: {\r\n    minHeight: \"90vh\",\r\n    maxHeight: \"90vh\",\r\n  },\r\n  textfld: {\r\n    width: \"45%\",\r\n    margin: \"1rem\",\r\n  },\r\n}));\r\n\r\nfunction FormDialog(props) {\r\n  const [enquery, setEnquery] = useState({\r\n    enqno: null,\r\n    duration: null,\r\n    partNo: null,\r\n    partName: null,\r\n    uom: null,\r\n    qty: null,\r\n    buyerName: null,\r\n    locationAddress: null,\r\n    buyerDeposit: null,\r\n    sellerRcvDeposit: null,\r\n    sellerPaidDeposit: null,\r\n  });\r\n  const [errors, setErrors] = useState({\r\n    enqno: \"\",\r\n    duration: \"\",\r\n    partNo: \"\",\r\n    partName: \"\",\r\n    uom: \"\",\r\n    qty: \"\",\r\n    buyerName: \"\",\r\n    locationAddress: \"\",\r\n    buyerDeposit: \"\",\r\n    sellerRcvDeposit: \"\",\r\n    sellerPaidDeposit: \"\",\r\n  });\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [openSnack, setOpenSnack] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    msg: \"\",\r\n  });\r\n  const classes = useStyles();\r\n  const onSubmit = async () => {\r\n    let vld = true;\r\n    for (const fld in enquery) {\r\n      if (!enquery[fld]) {\r\n        vld = false;\r\n        setErrors((errors) => ({ ...errors, [fld]: \"Please fill this field\" }));\r\n      } else {\r\n        setErrors((errors) => ({ ...errors, [fld]: \"\" }));\r\n      }\r\n    }\r\n    if (vld) {\r\n      setLoading(true);\r\n      try {\r\n        const result = await props.contract.methods\r\n          .createEnquery(\r\n            enquery.enqno,\r\n            +enquery.duration * 60,\r\n            enquery.partNo,\r\n            enquery.partName,\r\n            enquery.uom,\r\n            +enquery.qty,\r\n            enquery.buyerName,\r\n            enquery.locationAddress,\r\n            String(enquery.buyerDeposit * 10 ** 18),\r\n            String(enquery.sellerRcvDeposit * 10 ** 18),\r\n            String(enquery.sellerPaidDeposit * 10 ** 18)\r\n          )\r\n          .send({\r\n            from: props.account,\r\n            value: String(enquery.buyerDeposit * 10 ** 18),\r\n          });\r\n        props.addEnq({\r\n          enqid: result.events.EnqueryCreated.returnValues.id,\r\n          enqno: enquery.enqno,\r\n          enqEndTime: enquery.duration * 60 + Date.now() / 1000,\r\n          partNo: enquery.partNo,\r\n          partName: enquery.partName,\r\n          uom: enquery.uom,\r\n          qty: enquery.qty,\r\n          buyerName: enquery.buyerName,\r\n          locationAddress: enquery.locationAddress,\r\n          buyerDeposit: enquery.buyerDeposit,\r\n          sellerRcvDeposit: enquery.sellerRcvDeposit,\r\n          sellerPaidDeposit: enquery.sellerPaidDeposit,\r\n          status: 0,\r\n          buyerAdd: props.account,\r\n        });\r\n        setLoading(false);\r\n        props.close();\r\n      } catch (err) {\r\n        setLoading(false);\r\n        console.log(err);\r\n        setOpenSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Error happned please check the requirement\",\r\n        });\r\n      }     \r\n    }\r\n  };\r\n  const setEnqueryState = ({ target }) => {\r\n    setEnquery((enquery) => ({ ...enquery, [target.name]: target.value }));\r\n  };\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        open={openSnack.open}\r\n        autoHideDuration={4000}\r\n        onClose={() => setOpenSnack({ ...openSnack, open: false, msg: \"\" })}\r\n      >\r\n        <Alert\r\n          onClose={() => setOpenSnack({ ...openSnack, open: false, msg: \"\" })}\r\n          severity={openSnack.severity}\r\n        >\r\n          {openSnack.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        maxWidth=\"lg\"\r\n        classes={{ paper: classes.dialogPaper }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle name=\"form-dialog-title\">New Enquery</DialogTitle>\r\n        <DialogContent>          \r\n          <TextField\r\n            error={\"\" !== errors.enqno}\r\n            helperText={errors.enqno}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            name=\"enqno\"\r\n            label=\"Enquery No\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.duration}\r\n            helperText={errors.duration}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            type=\"number\"\r\n            name=\"duration\"\r\n            label=\"Enquery duration in Mins\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.partNo}\r\n            helperText={errors.partNo}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            name=\"partNo\"\r\n            label=\"Part Nnumber\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.partName}\r\n            helperText={errors.partName}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            name=\"partName\"\r\n            label=\"Part Name\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.uom}\r\n            helperText={errors.uom}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            name=\"uom\"\r\n            label=\"Uint of Measurement\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.qty}\r\n            helperText={errors.qty}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            type=\"number\"\r\n            name=\"qty\"\r\n            label=\"quantity\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.buyerName}\r\n            helperText={errors.buyerName}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            name=\"buyerName\"\r\n            label=\"Buyer Name\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.locationAddress}\r\n            helperText={errors.locationAddress}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            name=\"locationAddress\"\r\n            label=\"Buyer Location Address\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.buyerDeposit}\r\n            helperText={errors.buyerDeposit}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            type=\"number\"\r\n            name=\"buyerDeposit\"\r\n            label=\"Buyer Deposit in Ether\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.sellerRcvDeposit}\r\n            helperText={errors.sellerRcvDeposit}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            type=\"number\"\r\n            name=\"sellerRcvDeposit\"\r\n            label=\"Seller Deposit which will release in Buyer Recieved Phase\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.sellerPaidDeposit}\r\n            helperText={errors.sellerPaidDeposit}\r\n            className={classes.textfld}\r\n            required\r\n            onChange={setEnqueryState}\r\n            type=\"number\"\r\n            name=\"sellerPaidDeposit\"\r\n            label=\"Seller Deposit which will release in settlement phase\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.close} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <div className={classes.wrapper}>\r\n            <Button onClick={onSubmit} color=\"primary\" disabled={loading}>\r\n              Save\r\n            </Button>\r\n            {loading && (\r\n              <CircularProgress size={24} className={classes.buttonProgress} />\r\n            )}\r\n          </div>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    enqueries: state.enqueries,\r\n    contract: state.contract,\r\n    account: state.account,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addEnq: (enq) => dispatch({ type: \"ADD_ENQ\", payload: enq }),    \r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { useState } from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25%\",\r\n    },\r\n  },\r\n  wrapper: {\r\n    margin: theme.spacing(1),\r\n    position: \"relative\",\r\n  },\r\n  buttonProgress: {\r\n    //color: green[500],\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    marginTop: -12,\r\n    marginLeft: -12,\r\n  },\r\n  dialogPaper: {\r\n    minHeight: \"40vh\",\r\n    maxHeight: \"40vh\",\r\n  },\r\n}));\r\nfunction FormDialog(props) {\r\n  const [bid, setBid] = useState({ amount: null, supName: null });\r\n  const [errors, setErrors] = useState({ amount: \"\", supName: \"\" });\r\n  const [openSnack, setOpenSnack] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    msg: \"\",\r\n  });\r\n  const [loading, setLoading] = React.useState(false);\r\n  const classes = useStyles();\r\n  \r\n  const onSubmit = async () => {\r\n    let vld = true;\r\n    for (const fld in bid) {\r\n      if (!bid[fld]) {\r\n        vld = false;\r\n        setErrors({ ...errors, [fld]: \"Please fill this field\" });\r\n      } else {\r\n        setErrors({ ...errors, [fld]: \"\" });\r\n      }\r\n    }\r\n    if (\r\n      props.enquery.bidder !== \"0x0000000000000000000000000000000000000000\" &&\r\n      props.enquery.amount < bid.amount\r\n    ) {\r\n      setOpenSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Your offer amount is greater than best offer price\",\r\n      });\r\n      vld = false;\r\n    }\r\n    if (vld) {      \r\n      setLoading(true);\r\n      try {\r\n        await props.contract.methods\r\n          .placeBid(\r\n            props.enquery.enqid,\r\n            props.enquery.enqno,\r\n            bid.amount,\r\n            bid.supName\r\n          )\r\n          .send({\r\n            from: props.account,\r\n            value:\r\n              props.enquery.sellerRcvDeposit * 10 ** 18 +\r\n              props.enquery.sellerPaidDeposit * 10 ** 18,\r\n          });\r\n        props.updateEnq(\r\n          props.enqueries.map((item) => {\r\n            if (item.enqid === props.enquery.enqid) {\r\n              item = {\r\n                ...item,\r\n                amount: bid.amount,\r\n                supName: bid.supName,\r\n                bidder: props.account,\r\n              };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n        setLoading(false);\r\n        props.close();\r\n      } catch (err) {\r\n        setLoading(false);\r\n        console.log(err);\r\n        setOpenSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Error happned please check the requirement\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n  const setBidState = ({ target }) => {\r\n    setBid({ ...bid, [target.name]: target.value });\r\n  };\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        open={openSnack.open}\r\n        autoHideDuration={4000}\r\n        onClose={() => setOpenSnack({ ...openSnack, open: false, msg: \"\" })}\r\n      >\r\n        <Alert\r\n          onClose={() => setOpenSnack({ ...openSnack, open: false, msg: \"\" })}\r\n          severity={openSnack.severity}\r\n        >\r\n          {openSnack.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      <Dialog\r\n        open={props.open}\r\n        onClose={props.handleClose}\r\n        maxWidth=\"md\"\r\n        classes={{ paper: classes.dialogPaper }}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">New Bid</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            error={\"\" !== errors.amount}\r\n            helperText={errors.amount}\r\n            fullWidth\r\n            required\r\n            onChange={setBidState}\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            label=\"Amount\"\r\n          />\r\n          <TextField\r\n            error={\"\" !== errors.supName}\r\n            helperText={errors.supName}\r\n            fullWidth\r\n            required\r\n            onChange={setBidState}\r\n            name=\"supName\"\r\n            label=\"Supplier Name\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={props.close} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <div className={classes.wrapper}>\r\n            <Button onClick={onSubmit} color=\"primary\" disabled={loading}>\r\n              Save\r\n            </Button>\r\n            {loading && (\r\n              <CircularProgress size={24} className={classes.buttonProgress} />\r\n            )}\r\n          </div>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    enqueries: state.enqueries,\r\n    contract: state.contract,\r\n    account: state.account,    \r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {    \r\n    updateEnq: (enqs) => dispatch({ type: \"updateEnq\", payload: enqs }),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormDialog);\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport DeleteIcon from \"@material-ui/icons//Delete\";\r\nimport UpdateIcon from \"@material-ui/icons/Update\";\r\nimport LocalShippingIcon from \"@material-ui/icons/LocalShipping\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport NewEnquery from \"./NewEnquery\";\r\nimport NewBid from \"./NewBid\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#999\",\r\n  },\r\n  button: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst statusEnum = {\r\n  0: \"Still Open\",\r\n  1: \"closed\",\r\n  2: \"Received\",\r\n  3: \"Settlement\",\r\n  4: \"Cancle\",\r\n  null: \"\",\r\n};\r\n\r\nfunction EnqueryList(props) {\r\n  const [sendtxn, setSendtxn] = React.useState(false);\r\n  const [openNewEnquery, setOpenNewEnquery] = useState(false);\r\n  const [openPlaceBid, setOpenPlaceBid] = useState(false);\r\n  const [enquery, setEnquery] = useState({});\r\n  const [openSnack, setOpenSnack] = useState({\r\n    open: false,\r\n    severity: \"success\",\r\n    msg: \"\",\r\n  });\r\n  const [filterState, setfilterState] = useState({\r\n    myEnqueries: false,\r\n    myBids: false,\r\n    openEnqs: false,\r\n  });\r\n  // It is same as computed property in vue js\r\n  const filterEnqs = props.enqueries.filter((item) => {\r\n    if (\r\n      !filterState.myBids &&\r\n      !filterState.myEnqueries &&\r\n      !filterState.openEnqs\r\n    )\r\n      return true;\r\n    if (filterState.openEnqs) {\r\n      if(item.status < 3) {\r\n        if (filterState.myEnqueries && item.buyerAdd === props.account)\r\n          return true;\r\n        if (filterState.myBids && item.bidder === props.account) return true;\r\n        if (filterState.myBids || filterState.myEnqueries) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      } else {\r\n        return false;\r\n      } \r\n    } else {\r\n      if (filterState.myEnqueries && item.buyerAdd === props.account)\r\n          return true;\r\n      if (filterState.myBids && item.bidder === props.account) return true;\r\n          return false;\r\n    }\r\n  });\r\n  const handleFilterChange = (event) => {\r\n    setfilterState((filterState) => ({\r\n      ...filterState,\r\n      [event.target.name]: event.target.checked,\r\n    }));\r\n  };\r\n  useInterval(async () => {\r\n    const updEnqs = [];\r\n    let updflg = false;\r\n    try {\r\n      //const res= await props.contract.methods.getBlocktime().call();\r\n      // for (const item of props.enqueries) {\r\n      //   if (\r\n      //     +item.status === 0 &&\r\n      //     item.buyerAdd === props.account &&\r\n      //     item.enqEndTime * 1000 + 60000 < Date.now()\r\n      //   ) {\r\n      //     await props.contract.methods\r\n      //       .endEnquery(item.enqid)\r\n      //       .send({ from: props.account });\r\n      //     if (item.supName === \"\") {\r\n      //       updEnqs.push({ ...item, status: 4 });\r\n      //       updflg = true;\r\n      //     } else {\r\n      //       updEnqs.push({ ...item, status: 1 });\r\n      //       updflg = true;\r\n      //     }\r\n      //   } else {\r\n      //     updEnqs.push(item);\r\n      //   }\r\n      // }\r\n      // if (updflg) {\r\n      //   props.updateEnq(updEnqs);\r\n      // }\r\n    } catch (err) {\r\n      if (updflg) {\r\n        for (const item of props.enqueries) {\r\n          if (!updEnqs.find(({ enqid }) => +enqid === +item.engid)) {\r\n            updEnqs.push(item);\r\n          }\r\n        }\r\n        props.updateEnq(updEnqs);\r\n      }\r\n      console.log(\"err:\", err);\r\n    }\r\n  }, 60000);\r\n\r\n  function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n\r\n    // Remember the latest function.\r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n\r\n    // Set up the interval.\r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\n  const onNewEnquery = () => {\r\n    setOpenNewEnquery(true);\r\n  };\r\n\r\n  const onPlaceBid = (enquery) => {\r\n    if (\r\n      +enquery.status === 0 &&\r\n      enquery.bidder !== props.account &&\r\n      enquery.buyerAdd !== props.account\r\n    ) {\r\n      setEnquery(enquery);\r\n      setOpenPlaceBid(true);\r\n    } else {\r\n      if (enquery.bidder === props.account) {\r\n        setOpenSnack({\r\n          open: true,\r\n          severity: \"warning\",\r\n          msg: \"You already send your quotation\",\r\n        });\r\n      } else if (enquery.buyerAdd === props.account) {\r\n        setOpenSnack({\r\n          open: true,\r\n          severity: \"warning\",\r\n          msg: \"Buyer can't send the quotation\",\r\n        });\r\n      } else {\r\n        setOpenSnack({\r\n          open: true,\r\n          severity: \"warning\",\r\n          msg: \"Enquery is not open any more\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onEnd = async (enq) => {\r\n    setSendtxn(true);\r\n    try {\r\n      if (\r\n        enq.buyerAdd === props.account &&\r\n        +enq.status === 0 &&\r\n        enq.enqEndTime * 1000 < Date.now()\r\n      ) {\r\n        await props.contract.methods\r\n          .endEnquery(enq.enqid)\r\n          .send({ from: props.account });\r\n        props.updateEnq(\r\n          props.enqueries.map((item) => {\r\n            if (item.enqid === enq.enqid) {\r\n              item = { ...item, status: 1 };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n      } else {\r\n        setOpenSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Just not closed overdue Enquery can be closed by Buyer\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setOpenSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Error happned please check the requirement\",\r\n      });\r\n    }\r\n    setSendtxn(false);\r\n  };\r\n\r\n  const onCancle = async (enq) => {\r\n    setSendtxn(true);\r\n    try {\r\n      if (enq.buyerAdd === props.account && +enq.status === 0 && !enq.amount) {\r\n        await props.contract.methods\r\n          .cancleEnquery(enq.enqid)\r\n          .send({ from: props.account });\r\n        props.updateEnq(\r\n          props.enqueries.map((item) => {\r\n            if (item.enqid === enq.enqid) {\r\n              item = { ...item, status: 4 };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n      } else {\r\n        setOpenSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Just not closed Enquery which dont have any quotation can be cancled by Buyer\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setOpenSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Error happned please check the requirement\",\r\n      });\r\n    }\r\n    setSendtxn(false);\r\n  };\r\n  const onRecieved = async (enq) => {\r\n    setSendtxn(true);\r\n    try {\r\n      if (enq.buyerAdd === props.account && +enq.status === 1) {\r\n        await props.contract.methods\r\n          .receivedItem(enq.enqid)\r\n          .send({ from: props.account });\r\n        props.updateEnq(\r\n          props.enqueries.map((item) => {\r\n            if (item.enqid === enq.enqid) {\r\n              item = { ...item, status: 2 };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n      } else {\r\n        setOpenSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"When enquery is closed, just winner can anounced received the cargo\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setOpenSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Error happned please check the requirement\",\r\n      });\r\n    }\r\n    setSendtxn(false);\r\n  };\r\n\r\n  const onSettlement = async (enq) => {\r\n    setSendtxn(true);\r\n    try {\r\n      if (enq.bidder === props.account && +enq.status === 2) {\r\n        await props.contract.methods\r\n          .settlement(enq.enqid)\r\n          .send({ from: props.account });\r\n        props.updateEnq(\r\n          props.enqueries.map((item) => {\r\n            if (item.enqid === enq.enqid) {\r\n              item = { ...item, status: 3 };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n      } else {\r\n        setOpenSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"When enquery is in received stage, just seller can tell payment has been done by buyer\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      setOpenSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Error happned please check the requirement\",\r\n      });\r\n    }\r\n    setSendtxn(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenNewEnquery(false);\r\n  };\r\n\r\n  const handleCloseBid = () => {\r\n    setOpenPlaceBid(false);\r\n  };\r\n\r\n  const classes = useStyles();\r\n\r\n  const statusAv = (s) => {\r\n    switch (s) {\r\n      case 0:\r\n        return \"O\";\r\n      case 1:\r\n        return \"E\";\r\n      case 2:\r\n        return \"R\";\r\n      case 3:\r\n        return \"S\";\r\n      case 4:\r\n        return \"C\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n        <Dialog\r\n        open={sendtxn}\r\n      >\r\n        <DialogTitle >{\"Transaction is in progress ...\"}</DialogTitle>\r\n        <DialogContent>          \r\n          <LinearProgress />\r\n        </DialogContent>\r\n        <DialogActions>        \r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      <Snackbar\r\n        open={openSnack.open}\r\n        autoHideDuration={4000}\r\n        onClose={() => setOpenSnack({ ...openSnack, open: false, msg: \"\" })}\r\n      >\r\n        <Alert\r\n          onClose={() => setOpenSnack({ ...openSnack, open: false, msg: \"\" })}\r\n          severity={openSnack.severity}\r\n        >\r\n          {openSnack.msg}\r\n        </Alert>\r\n      </Snackbar>\r\n      <AppBar className={classes.appBar} position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Enquery List\r\n          </Typography>\r\n          <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            className={classes.button}\r\n            color=\"primary\"\r\n            onClick={onNewEnquery}\r\n          >\r\n            New Enquery\r\n          </Button>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={filterState.myEnqueries}\r\n                onChange={handleFilterChange}\r\n                name=\"myEnqueries\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"My Enqueries\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={filterState.myBids}\r\n                onChange={handleFilterChange}\r\n                name=\"myBids\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"My Quotations\"\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={filterState.openEnqs}\r\n                onChange={handleFilterChange}\r\n                name=\"openEnqs\"\r\n                color=\"primary\"\r\n              />\r\n            }\r\n            label=\"Just Open Enqueries\"\r\n          />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width=\"5%\">Enqery No</TableCell>\r\n              <TableCell width=\"7%\">End Time</TableCell>\r\n              <TableCell width=\"5%\">Part No</TableCell>\r\n              <TableCell width=\"10%\">Part Name</TableCell>\r\n              <TableCell width=\"3%\">UOM</TableCell>\r\n              <TableCell width=\"4%\">Quantity</TableCell>\r\n              <TableCell width=\"10%\">Buyer Name</TableCell>\r\n              <TableCell width=\"15%\">Location Address</TableCell>\r\n              <TableCell width=\"5%\">Buyer Deposit</TableCell>\r\n              <TableCell width=\"10%\">Supplier Name</TableCell>\r\n              <TableCell width=\"5%\">Offer Amount</TableCell>\r\n              <TableCell width=\"5%\">Seller Rcv Stage Deposit</TableCell>\r\n              <TableCell width=\"5%\">Seller Settlment Stage Deposit</TableCell>\r\n              <TableCell width=\"4%\">status</TableCell>\r\n              <TableCell width=\"6%\" align=\"center\" colSpan={3}>\r\n                Actions\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filterEnqs.map((row) => {\r\n              return (\r\n                <TableRow key={row.enqid}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.enqno}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{`${new Date(\r\n                    row.enqEndTime * 1000\r\n                  ).toLocaleDateString()} ${new Date(\r\n                    row.enqEndTime * 1000\r\n                  ).toLocaleTimeString()}`}</TableCell>\r\n                  <TableCell>{row.partNo}</TableCell>\r\n                  <TableCell>{row.partName}</TableCell>\r\n                  <TableCell>{row.uom}</TableCell>\r\n                  <TableCell>{row.qty}</TableCell>\r\n                  <TableCell>{row.buyerName}</TableCell>\r\n                  <TableCell>{row.locationAddress}</TableCell>\r\n                  <TableCell>{row.buyerDeposit}</TableCell>\r\n                  <TableCell>{row.supName}</TableCell>\r\n                  <TableCell>{row.amount}</TableCell>\r\n                  <TableCell>{row.sellerRcvDeposit}</TableCell>\r\n                  <TableCell>{row.sellerPaidDeposit}</TableCell>\r\n                  <TableCell>                  \r\n                    <Chip\r\n                      size=\"small\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      avatar={<Avatar>{statusAv(row.status)}</Avatar>}\r\n                      label={statusEnum[row.status]}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      onClick={() => onPlaceBid(row)}\r\n                      color=\"primary\"\r\n                      title=\"Send Quotation\"\r\n                    >\r\n                      <StoreIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      onClick={() => onRecieved(row)}\r\n                      color=\"primary\"\r\n                      title=\"Recieved Goods\"\r\n                    >\r\n                      <LocalShippingIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      onClick={() => onSettlement(row)}\r\n                      color=\"primary\"\r\n                      title=\"Settlement\"\r\n                    >\r\n                      <PaymentIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      onClick={() => onEnd(row)}\r\n                      color=\"primary\"\r\n                      title=\"Close\"\r\n                    >\r\n                      <UpdateIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      edge=\"start\"\r\n                      onClick={() => onCancle(row)}\r\n                      color=\"primary\"\r\n                      title=\"Cancle\"\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <NewEnquery open={openNewEnquery} close={handleClose} />\r\n      <NewBid open={openPlaceBid} close={handleCloseBid} enquery={enquery} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    enqueries: state.enqueries,\r\n    contract: state.contract,\r\n    account: state.account,\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateEnq: (enqs) => dispatch({ type: \"updateEnq\", payload: enqs }),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EnqueryList);\r\n","import React, { Component } from \"react\";\r\nimport PurchaseContract from \"./contracts/Purchase.json\";\r\nimport getWeb3 from \"./getWeb3\";\r\nimport EnqueryList from './components/EnqueryList';\r\nimport {connect} from 'react-redux'\r\n//import '@fontsource/roboto';\r\n\r\nclass App extends Component {\r\n  componentDidMount = async () => {\r\n    try {      \r\n      // Get network provider and web3 instance.\r\n      const web3 = await getWeb3();\r\n      this.props.setWeb3(web3);  // Use web3 to get the user's accounts.\r\n      const accounts = await web3.eth.getAccounts();\r\n      \r\n      this.props.setAccount(accounts[0]);\r\n      // Get the contract instance.\r\n      const networkId = await web3.eth.net.getId();\r\n      const deployedNetwork = PurchaseContract.networks[networkId];\r\n      const instance = new web3.eth.Contract(\r\n        PurchaseContract.abi,\r\n        deployedNetwork && deployedNetwork.address,\r\n      );\r\n      this.props.setContract(instance);\r\n      // Set web3, accounts, and contract to the state, and then proceed with an\r\n      // example of interacting with the contract's methods.\r\n      // get Enqueries from smart contract\r\n      //   this.setState({ web3, accounts, contract: instance },this.runExample);    \r\n      const enqCnt = await instance.methods.getEnqueryCount().call();    \r\n      let enqList=[];\r\n      let bid,enquery;\r\n      // Update state with the result.\r\n      for(let i=0;i<enqCnt;i++){\r\n          enquery=await instance.methods.getEnquery(i).call();\r\n          bid = await instance.methods.getBid( i ).call();      \r\n          enqList.push({enqid:i,enqno:enquery[0],enqEndTime:enquery[1],partNo:enquery[2],partName:enquery[3],uom:enquery[4],qty:enquery[5],buyerName:enquery[6],locationAddress:enquery[7],status:enquery[8],buyerDeposit:enquery[9]/10**18,\r\n                        bidder:bid[0],amount:bid[1],supName:bid[2],buyerAdd:bid[3],sellerRcvDeposit:bid[4]/10**18,sellerPaidDeposit:bid[5]/10**18})\r\n      }\r\n      this.props.setEnqs(enqList);           \r\n    } catch (error) {\r\n      // Catch any errors for any of the above operations.\r\n      alert(\r\n        `Failed to load web3, accounts, or contract. Check console for details.`,\r\n      );\r\n      console.error(error);\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    if (!this.props.web3) {\r\n    return <div>Loading Web3, accounts, and contract...{this.props.web3}</div>;\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <EnqueryList />   \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state)=>{    \r\n  return {\r\n  web3:state.web3\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setEnqs: (enqs) => dispatch({type: 'setEnqs', payload: enqs}),\r\n    setWeb3: (web3) => dispatch({type: 'setWeb3', payload: web3}),\r\n    setAccount: (account) => dispatch({type: 'setAccount', payload: account}),\r\n    setContract:(contract) => dispatch({type: 'setContract', payload: contract}),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initstate = {\r\n  enqueries: [],\r\n  account: \"\",\r\n  contract: null,\r\n  web3: null,\r\n};\r\nconst rootReducer = (state = initstate, action) => {\r\n  switch (action.type) {\r\n    case \"setEnqs\":\r\n      return { ...state, enqueries: action.payload };\r\n    case \"ADD_ENQ\":\r\n      return { ...state, enqueries: [...state.enqueries, action.payload] };\r\n    case \"setWeb3\":\r\n      return { ...state, web3: action.payload };\r\n    case \"setAccount\":\r\n      return { ...state, account: action.payload };\r\n    case \"setContract\":\r\n      return { ...state, contract: action.payload };\r\n    case \"updateEnq\":\r\n      return { ...state, enqueries: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux'\nimport rootReducer from './reducers/rootReducer';\n\nconst store=createStore(rootReducer);\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}